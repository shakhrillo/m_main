rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // match /statistics/{statisticsId} {
    //   allow read: if isAdmin();
    // }

    match /settings/{settingsId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    match /payments/{paymentsId} {
      allow read: if request.auth != null;
    }

    match /machines/{machineId} {
      allow read: if request.auth != null;

      match /logs/{logsId} {
        allow read: if request.auth != null;
      }

      match /stats/{statsId} {
        allow read: if request.auth != null;
      }

      match /history/{historyId} {
        allow read: if request.auth != null;
      }
    }

    match /containers/{containerId} {
      allow read: if request.auth.uid == resource.data.uid;
      allow create, update: if request.auth != null && request.auth.uid == request.resource.data.uid;

      match /images/{imageId} {
        allow read: if request.auth.uid == resource.data.uid;
      }

      match /videos/{videoId} {
        allow read: if request.auth.uid == resource.data.uid;
      }

      match /reviews/{reviewId} {
        allow read: if request.auth.uid == resource.data.uid;
      }
    }

    match /users/{userId} {
      allow get, list: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == userId;

      match /buyCoins/{buyCoinsId} {
        allow create: if request.auth != null && request.auth.uid == userId;
        allow read: if request.auth != null && request.auth.uid == userId;
      }
    }

    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
