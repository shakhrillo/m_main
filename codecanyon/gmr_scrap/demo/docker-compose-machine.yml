services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: ${PROJECT_ID}-server
    volumes:
      - ./server:/usr/src/app
      - ./stripe-secrets:/usr/src/app/secrets
      - ./firebase.json:/usr/src/firebase.json
      - ./firebasekeys.json:/usr/src/firebasekeys.json
    environment:
      NODE_ENV: development
      MACHINE_BUILD_IMAGE_NAME: ${PROJECT_ID}

      DOCKER_HOST: ${DOCKER_IPV4_ADDRESS}
      DOCKER_PORT: ${DOCKER_PORT}

      FIREBASE_IP: ${FIREBASE_IPV4_ADDRESS}
      FIREBASE_PROJECT_ID: ${PROJECT_ID}
      FIREBASE_EMULATOR_FIRESTORE: ${FIREBASE_EMULATOR_FIRESTORE}

      STRIPE_API_KEY: ${STRIPE_API_KEY}
      STRIPE_WEBHOOK_SECRET_FILE: /usr/src/app/secrets/stripe_webhook_secret
      STRIPE_SUCCESS_URL: ${STRIPE_SUCCESS_URL}
      STRIPE_CANCEL_URL: ${STRIPE_CANCEL_URL}

      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "${SERVER_PORT}:1337"
    networks:
      gmrs-network:
        ipv4_address: ${SERVER_IPV4_ADDRESS}
  machine:
    build:
      context: ./machine
      dockerfile: Dockerfile
    container_name: ${PROJECT_ID}-machine
    volumes:
      - ./firebase.json:/usr/src/app/firebase.json
      - ./firebasekeys.json:/usr/src/app/firebasekeys.json
      - ./machine:/usr/src/app
    working_dir: /usr/src/app
    environment:
      NODE_ENV: development
      DOCKER_HOST: ${DOCKER_IPV4_ADDRESS}
      DOCKER_PORT: ${DOCKER_PORT}
      MACHINE_BUILD_IMAGE_NAME: ${PROJECT_ID}
      FIREBASE_PROJECT_ID: ${PROJECT_ID}
    depends_on:
      - server
    networks:
      gmrs-network:
        ipv4_address: ${MACHINE_IPV4_ADDRESS}
    restart: "no"
    entrypoint: ["npm", "run", "init"]

networks:
  gmrs-network:
    external: true
