rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /statistics/{statisticsId} {
      allow read: if isAdminRead();
    }

    match /settings/{settingsId} {
      allow read: if true;
      allow write: if isAdminEditor();
    }

    match /payments/{paymentsId} {
      allow read: if request.auth != null;
    }

    match /machines/{machineId} {
      allow read: if isAdminRead();

      match /logs/{logsId} {
        allow read: if isAdminRead();
      }

      match /stats/{statsId} {
        allow read: if isAdminRead();
      }

      match /history/{historyId} {
        allow read: if isAdminRead();
      }
    }

    match /containers/{containerId} {
      allow read: if request.auth.uid == resource.data.uid || isAdminRead();
      allow create, update: if request.auth.uid == request.resource.data.uid;

      match /images/{imageId} {
        allow read: if request.auth.uid == resource.data.uid || isAdminRead();
      }

      match /videos/{videoId} {
        allow read: if request.auth.uid == resource.data.uid || isAdminRead();
      }

      match /reviews/{reviewId} {
        allow read: if request.auth.uid == resource.data.uid || isAdminRead();
      }
    }

    match /users/{userId} {
      allow get, list: if request.auth != null || isAdminRead();
      allow update, delete: if (request.auth.uid == userId && isValidUpdate()) || isAdminEditor();

      match /buyCoins/{buyCoinsId} {
        allow create: if request.auth.uid == userId;
        allow read: if request.auth.uid == userId;
      }
    }

    function isAdminRead() {
      return request.auth != null && get(/databases/$(database)/documents/admin/$(request.auth.uid)).data.isAdmin == true;
    }

    function isAdminEditor() {
      return request.auth != null && get(/databases/$(database)/documents/admin/$(request.auth.uid)).data.isEditor == true;
    }

    function isUserOrAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.email == "user@user.com" || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.email == "admin@admin.com";
    }

    function isNewUser() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.email != "user@user.com" && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.email != "admin@admin.com";
    }

    function isValidUpdate() {
      return !request.resource.data.diff(resource.data).affectedKeys().hasAny(['isAdmin', 'isDeleted', 'isEditor', 'totalImages', 'totalOwnerReviews', 'totalReviews', 'totalSpent', 'totalValidateComments', 'totalValidateInfo', 'totalVideos', 'uid']);
    }

    function isEmulator() {
      return request.auth != null && true;
    }

  }
}
